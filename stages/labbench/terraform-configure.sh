#!/bin/bash

region=$(aws ec2 describe-availability-zones --output text --query 'AvailabilityZones[0].[RegionName]')

userid=$(aws sts get-caller-identity --output text --query 'UserId')

account=$(aws sts get-caller-identity --output text --query 'Account')

states_bucket="terraform-${region}-${account}"
if [[ ! -z $(aws s3api head-bucket --bucket $states_bucket 2>&1) ]]; then
    # got an error when trying to access the bucket
    echo "Creating terraform states bucket"
    aws s3api create-bucket \
    --bucket $states_bucket \
    --region $region \
    --create-bucket-configuration LocationConstraint=$region
fi

credentials_file_name=$(find ~/.aws -name "credentials")

config_file_name="terraform/var-backend.generated.auto.tfvars"

cat > $config_file_name <<TEMPLATE
# Generated by terreform-configure.sh 
# DO not edit

# Backend access configuration
# use with -var-file
#
# This part also act as a backend configuration file
# Do not change the key names
# use with -backend-config in init
#

# choose a role associated to the ec2 instance
# make sure the role has the policy AdministratorAccess
#profile  = "$userid"
shared_credentials_file = "$credentials_file_name"

# make sure the bucket exists
# make user or role has access to the bucket and files
bucket = "$states_bucket"

# path to the state file inside the bucket
key = "states/salvia/stages/env-labbench.state"

# do not encrypt the bucket
encrypt = false

# choose a region
region = "$region"
TEMPLATE


